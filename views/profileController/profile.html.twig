{% extends "dashboard.html.twig" %}
{% block title %}
	{{ parent() }}
	Profil Utilisateur
{% endblock %}
{% block content %}
{% do clear_session_alert() %}
{% include 'components/dashboard/header.html.twig' with {'title': 'Vue d\'enssemble'} %}
<div class="flex-1 space-y-6 p-6 pt-6 0 bg-gray-50 overflow-y-scroll h-[calc(100vh-5.1rem)]">
<div class="flex lg:flex-row flex-col">
    {% include 'components/dashboard/profileSidebar.html.twig' %}
    <div class="w-full lg:pt-0 mt-6 lg:mt-0 pt-6 lg:border-t-0 border-t">
        <div>
            <h3 class="text-xl font-medium">Informations personnelles</h3>
            <p class="text-gray-500">
                Définissez vos préférences de compte et modifiez vos informations personnelles.
            </p>
        </div>
        <form class="space-y-6 pt-6 border-t mt-6" action="" method="POST" autocomplete="off">
              {% if session.alert %}
                  <div class="text-sm mb-6 {% if session.alert.status == 'error' %}text-danger{% else %}text-success{% endif %}">
                      {{ session.alert.message }}
                  </div>
              {% endif %}
            <div class="flex flex-col gap-2">
                <label for="id" class="font-medium text-sm">Identifiant de compte</label>
                <div id="id" class="block py-4 px-4 m-0 w-full rounded-xl border border-gray-200 border-solid appearance-none text-sm sm:leading-5 bg-gray-100 cursor-not-allowed">
                   {{ user.id }}
                </div>
                <div class="gap-x-2 items-center flex">
                    <svg class="block flex-shrink-0 w-4 h-4 align-middle" width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g id="Warning / Info">
                            <path id="Vector" d="M12 11V16M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12.0498 8V8.1L11.9502 8.1002V8H12.0498Z" stroke="#6b7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                        </g>
                    </svg>
                    <p class="text-xs text-gray-500">
                        En cas de problème avec votre compte, veuillez fournir cet identifiant au support.
                    </p>
                </div>
            </div>
            <div class="flex flex-col gap-2">
                <label for="type" class="font-medium text-sm">Type de compte</label>
                <div id="type" class="block py-4 px-4 m-0 w-full rounded-xl border border-gray-200 border-solid appearance-none text-sm sm:leading-5 bg-gray-100 cursor-not-allowed">
                    {% if user.type is defined %}
                        {{ user.type == 'company' ? 'Entreprise' : 'Personnel' }}
                    {% else %}
                        Personnel
                    {% endif %}
                </div>
                <div class="gap-x-2 items-center flex">
                    <svg class="block flex-shrink-0 w-4 h-4 align-middle" width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g id="Warning / Info">
                            <path id="Vector" d="M12 11V16M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12.0498 8V8.1L11.9502 8.1002V8H12.0498Z" stroke="#6b7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                        </g>
                    </svg>
                    <p class="text-xs text-gray-500">
                        Vous ne pouvez pas changer le type de compte après la création du compte. Pour changer le type de compte, veuillez contacter le support.
                    </p>
                </div>
            </div>
            <div class="flex flex-col gap-2 relative">
                <label for="name" class="font-medium text-sm" id="profile_name_label">
                    {% if user.type is defined and user.type == 'company' %}
                        Nom de l'entreprise
                    {% else %}
Nom complet{% endif %}</label><input id="name" name="name" type="text" minlength="1" maxlength="100" value="{{ old.name is defined ? old.name : user.name }}" class="peer block py-4 px-4 m-0 w-full rounded-xl border border-gray-200 border-solid appearance-none text-sm sm:leading-5 focus:border-primary focus:ring-primary focus:outline-offset-2 {% if errors.name is defined %}invalid border-danger ring-danger ring-1{% endif %}" placeholder="{% if user.type is defined and user.type == 'company' %}Nom de l'entreprise{% else %}Nom complet{% endif %}" autocomplete="off" autocorrect="off" autocapitalize="off" required pattern="{% if user.type is defined and user.type == 'company' %}[A-Za-zÀ-ÖØ-öø-ÿ0-9&.,' -]{2,50}{% else %}([A-Za-z]+ [A-Za-z]+(?: [A-Za-z]+)*){% endif %}" oninput="
	                        const nameInput = this;
	                        const errorSpan = document.getElementById('profile_name_error');
	                        const type = '{{ user.type is defined and user.type == 'company' ? 'company' : 'individual' }}';
	                        const value = nameInput.value.trim();
	                        let valid = false;
	                        if(type === 'company') {
	                            valid = /^[A-Za-zÀ-ÖØ-öø-ÿ0-9&.,' \-]{2,50}$/.test(value);
	                        } else {
	                            valid = /^([A-Za-z]+ [A-Za-z]+(?: [A-Za-z]+)*)$/.test(value);
	                        }
	                        if(value === '' || !valid){
	                            nameInput.classList.add('invalid');
	                            if(errorSpan) errorSpan.style.display = 'block';
	                        } else {
	                            nameInput.classList.remove('invalid');
	                            if(errorSpan) errorSpan.style.display = 'none';
	                        }
	                    " onblur="
	                        const nameInput = this;
	                        const errorSpan = document.getElementById('profile_name_error');
	                        const type = '{{ user.type is defined and user.type == 'company' ? 'company' : 'individual' }}';
	                        const value = nameInput.value.trim();
	                        let valid = false;
	                        if(type === 'company') {
	                            valid = /^[A-Za-zÀ-ÖØ-öø-ÿ0-9&.,' \-]{2,50}$/.test(value);
	                        } else {
	                            valid = /^([A-Za-z]+ [A-Za-z]+(?: [A-Za-z]+)*)$/.test(value);
	                        }
	                        if(value === '' || !valid){
	                            nameInput.classList.add('invalid');
	                            if(errorSpan) errorSpan.style.display = 'block';
	                        } else {
	                            nameInput.classList.remove('invalid');
	                            if(errorSpan) errorSpan.style.display = 'none';
	                        }
	                    "><span id="profile_name_error" class="mt-2 hidden text-xs text-danger">{% if user.type is defined and user.type == 'company' %}
Veuillez entrer un nom d'entreprise valide (2 à 50 caractères).{% else %}
Veuillez entrer un nom complet valide (prénom et nom, lettres uniquement).{% endif %}</span>{% if errors.name is defined %}<span class="mt-2 text-xs text-danger">
{{ errors.name }}</span>{% endif %}<div class="gap-x-2 items-center flex"><svg class="block flex-shrink-0 w-4 h-4 align-middle" width="800px" height="800px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="Warning / Info">
	<path id="Vector" d="M12 11V16M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12.0498 8V8.1L11.9502 8.1002V8H12.0498Z" stroke="#6b7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
</g></svg><p class="text-xs text-gray-500">
{% if user.type is defined and user.type == 'company' %}
	Ce nom d'entreprise apparaîtra sur les réservations et les factures.
{% else %}
	Ce nom complet apparaîtra sur les réservations et les factures.
{% endif %}</p></div></div><div class="flex flex-col gap-2 relative"><label for="phone" class="font-medium text-sm">Numéro de téléphone</label><input id="phone" name="phone" type="text" maxlength="25" value="{{ old.phone is defined ? old.phone : (user.phone is defined ? user.phone : '') }}" class="peer block py-4 px-4 m-0 w-full rounded-xl border border-gray-200 border-solid appearance-none text-sm sm:leading-5 focus:border-primary focus:ring-primary focus:outline-offset-2 {% if errors.phone is defined %}invalid border-danger ring-danger ring-1{% endif %}" placeholder="06 12 34 56 78 ou +33 6 12 34 56 78" autocomplete="tel" pattern="(^0[1-9](?: ?\d{2}){4}$)|(^\+\d{1,3}(?: ?\d{1,2}){4,6}$)" oninput="
	                        let input = this;
	                        let val = input.value.trim();
	                        let formatted = '';
	                        if(val.startsWith('+')) {
	                            let match = val.match(/^\+(\d{1,3})/);
	                            if(match) {
	                                let indicatif = match[1];
	                                let reste = val.replace('+'+indicatif, '').replace(/\D/g, '');
	                                formatted = '+' + indicatif;
	                                if(reste.length > 0) {
	                                    formatted += ' ';
	                                    for(let i = 0; i < reste.length; i += 2){
	                                        if(i > 0) formatted += ' ';
	                                        formatted += reste.substring(i, i+2);
	                                    }
	                                }
	                                input.value = formatted.trim();
	                            } else {
	                                input.value = val;
	                            }
	                        } else if(val.startsWith('0')) {
	                            let value = val.replace(/\D/g, '');
	                            for(let i = 0; i < value.length; i += 2){
	                                if(i > 0) formatted += ' ';
	                                formatted += value.substring(i, i+2);
	                            }
	                            input.value = formatted.trim();
	                        } else {
	                            input.value = val;
	                        }
	                        const errorSpan = document.getElementById('profile_phone_error');
	                        const regexFr = /^0[1-9](?: ?\d{2}){4}$/;
	                        const regexIntl = /^\+\d{1,3}(?: ?\d{1,2}){4,6}$/;
	                        if(input.value.trim() === '' || (!regexFr.test(input.value.trim()) && !regexIntl.test(input.value.trim()))){
	                            input.classList.add('invalid');
	                            if(errorSpan) errorSpan.style.display = 'block';
	                        } else {
	                            input.classList.remove('invalid');
	                            if(errorSpan) errorSpan.style.display = 'none';
	                        }
	                    " onblur="
	                        const input = this;
	                        const errorSpan = document.getElementById('profile_phone_error');
	                        const regexFr = /^0[1-9](?: ?\d{2}){4}$/;
	                        const regexIntl = /^\+\d{1,3}(?: ?\d{1,2}){4,6}$/;
	                        if(input.value.trim() === '' || (!regexFr.test(input.value.trim()) && !regexIntl.test(input.value.trim()))){
	                            input.classList.add('invalid');
	                            if(errorSpan) errorSpan.style.display = 'block';
	                        } else {
	                            input.classList.remove('invalid');
	                            if(errorSpan) errorSpan.style.display = 'none';
	                        }
	                    "><span id="profile_phone_error" class="mt-2 hidden text-xs text-danger">Numéro de téléphone invalide. Format attendu : 06 12 34 56 78 ou +33 6 12 34 56 78</span>{% if errors.phone is defined %}<span class="mt-2 text-xs text-danger">
{{ errors.phone }}</span>{% endif %}</div><div class="flex flex-col gap-2 relative"><label for="email" class="font-medium text-sm">Email</label><input id="email" name="email" type="email" maxlength="100" value="{{ old.email is defined ? old.email : user.email }}" class="peer block py-4 px-4 m-0 w-full rounded-xl border border-gray-200 border-solid appearance-none text-sm sm:leading-5 focus:border-primary focus:ring-primary focus:outline-offset-2 {% if errors.email is defined %}invalid border-danger ring-danger ring-1{% endif %}" placeholder="jean@exemple.com" required oninput="
	                        const emailInput = this;
	                        const errorSpan = document.getElementById('profile_email_error');
	                        const emailValue = emailInput.value.trim();
	                        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
	                        if(emailValue === '' || !emailRegex.test(emailValue)){
	                            emailInput.classList.add('invalid');
	                            if(errorSpan) errorSpan.style.display = 'block';
	                        } else {
	                            emailInput.classList.remove('invalid');
	                            if(errorSpan) errorSpan.style.display = 'none';
	                        }
	                    " onblur="
	                        const emailInput = this;
	                        const errorSpan = document.getElementById('profile_email_error');
	                        const emailValue = emailInput.value.trim();
	                        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
	                        if(emailValue === '' || !emailRegex.test(emailValue)){
	                            emailInput.classList.add('invalid');
	                            if(errorSpan) errorSpan.style.display = 'block';
	                        } else {
	                            emailInput.classList.remove('invalid');
	                            if(errorSpan) errorSpan.style.display = 'none';
	                        }
	                    "><span id="profile_email_error" class="mt-2 hidden text-xs text-danger">Email invalide.</span>{% if errors.email is defined %}<span class="mt-2 text-xs text-danger">
{{ errors.email }}</span>{% endif %}<div class="gap-x-2 items-center flex"><svg class="block flex-shrink-0 w-4 h-4 align-middle" width="800px" height="800px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="Warning / Info">
	<path id="Vector" d="M12 11V16M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12.0498 8V8.1L11.9502 8.1002V8H12.0498Z" stroke="#6b7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
</g></svg><p class="text-xs text-gray-500">
Si vous modifiez votre adresse e-mail, un e-mail de vérification vous sera envoyé. Vous devrez cliquer sur le lien de vérification pour confirmer le changement. Une fois la confirmation effectuée, votre adresse e-mail sera immédiatement mise à jour sur votre compte.</p></div></div><div class="flex flex-col items-center gap-2"><button type="submit" class="h-14 inline-flex text-sm items-center justify-center py-4 px-6 text-white font-medium font-heading rounded-xl bg-primary w-full text-center focus:ring focus:ring-primary transition duration-200 hover:bg-primary/95">Sauvegarder mon compte</button></div></form></div></div>{% endblock %}
